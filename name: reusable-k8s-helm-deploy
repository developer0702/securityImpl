name: reusable-k8s-helm-deploy

on:
  workflow_call:
    inputs:
      target-env:
        description: "Target environment to deploy to"
        required: true
        type: string
      release-name:
        description: "Release name of the service"
        required: false
        type: string
        default: "ob-core-contribution-api"
      image-tag:
        description: "Docker Image tag to pull and deploy"
        required: true
        type: string
      chart-version:
        description: "Helm chart version to pull and deploy"
        required: true
        type: string
    secrets:
      KUBE_CONTEXT_ELR:
        required: true
      KUBE_CONTEXT_CTC:
        required: false
      REGISTRY_TOKEN:
        required: true
      VAULT_APPROLE_ROLEID:
        required: true
      VAULT_APPROLE_SECRETID:
        required: true

jobs:
  deploy:
    environment: "${{ inputs.target-env }}"
    runs-on: uhg-runner
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2
      
      - name: Set Kubernetes Context for ELR
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: "${{ secrets.KUBE_CONTEXT_ELR }}"
      
      - name: Record Workflow Inputs
        shell: bash
        run: |
          echo "## Workflow Inputs" >> $GITHUB_STEP_SUMMARY
          echo "- Target Environment: ${{ inputs.target-env }}" >> $GITHUB_STEP_SUMMARY
          echo "- Image Tag: ${{ inputs.image-tag }}" >> $GITHUB_STEP_SUMMARY
          echo "- Chart Version: ${{ inputs.chart-version }}" >> $GITHUB_STEP_SUMMARY
      
      - name: Check Target Environment
        id: check-target-env
        shell: bash
        run: |
          if [[ "${{ inputs.target-env }}" == "stage" || "${{ inputs.target-env }}" == "prod" ]]; then
            echo "dual_region=true" >> $GITHUB_OUTPUT
          else
            echo "dual_region=false" >> $GITHUB_OUTPUT
          fi
          echo "Dual region deployment: ${{ steps.check-target-env.outputs.dual_region }}"
      
      - name: Setup and Install Helm Charts for ELR
        uses: ./.github/templates/helm-setup-and-install
        with:
          kube-context: "${{ secrets.KUBE_CONTEXT_ELR }}"
          target-env: "${{ inputs.target-env }}"
          release-name: "${{ inputs.release-name }}"
          image-tag: "${{ inputs.image-tag }}"
          chart-version: "${{ inputs.chart-version }}"
          registry-token: "${{ secrets.REGISTRY_TOKEN }}"
          vault-role-id: "${{ secrets.VAULT_APPROLE_ROLEID }}"
          vault-secret-id: "${{ secrets.VAULT_APPROLE_SECRETID }}"
      
      - name: Log Deployment to ELR
        shell: bash
        run: |
          echo "Deployment to ELR completed for ${{ inputs.target-env }} using image tag ${{ inputs.image-tag }}."
      
      - name: Set Kubernetes Context for CTC (if required)
        if: steps.check-target-env.outputs.dual_region == 'true'
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: "${{ secrets.KUBE_CONTEXT_CTC }}"
      
      - name: Setup and Install Helm Charts for CTC (if required)
        if: steps.check-target-env.outputs.dual_region == 'true'
        uses: ./.github/templates/helm-setup-and-install
        with:
          kube-context: "${{ secrets.KUBE_CONTEXT_CTC }}"
          target-env: "${{ inputs.target-env }}"
          release-name: "${{ inputs.release-name }}"
          image-tag: "${{ inputs.image-tag }}"
          chart-version: "${{ inputs.chart-version }}"
          registry-token: "${{ secrets.REGISTRY_TOKEN }}"
          vault-role-id: "${{ secrets.VAULT_APPROLE_ROLEID }}"
          vault-secret-id: "${{ secrets.VAULT_APPROLE_SECRETID }}"
      
      - name: Log Deployment to CTC (if required)
        if: steps.check-target-env.outputs.dual_region == 'true'
        shell: bash
        run: |
          echo "Deployment to CTC completed for ${{ inputs.target-env }} using image tag ${{ inputs.image-tag }}."
